' Gambas class file

Private horaalescanear As Date
Private mensageinput As String
Public datos As DData

Public Sub _new()

End

Public Sub Form_Open()

    Me.center           ' centramos el aplicativo
    mensageinput = "Ingrese id"
    Me.datos = New DData
    Me.datos = Mset.prepararporconfiguracion()  ' leer la configuracion, que camara, que modo, que db, etc
    Me.datos.setUsuarioActual("ninguno")
    Mcaptura.est_app_asis = 0   ' cada funcion abajo coloca est_app_asis en 0 si exitoso, sino 3,4,5 en fallo
    iniciarInterfaz     ' inicia y coloca oden en el grafico que ve el usuario, esconde mensages y pide id
    iniciarEscaner      ' inicia y verifica el backend, el escaner y ve si hay uno, sino emula uno, par pedir camara
    iniciarCamara       ' inicia y preprara la camara de video para empezar tomar fotos de los usuarios/trabajadores

End

'' este proceso inicia y/o prepara la apariencia en el modo normal (sin hacer nada)
Public Sub iniciarInterfaz()

    Dim estatus As Integer
    Dim dbmanagdat As DBmandat
    ' inicializacion de variables y entorno de captura, asi como de muestra
    inputficha.Text = mensageinput      ' en el input, coloco que ingrese un id cedula o ficha
    mensageusuario.Hide                 ' no muestro ninguna notificacion al usuario, la app esta en espera de uno
    img_mostrar_scan.Hide               ' escondo el area de imagen de dedo ya que la app esta en espera de uno
    videoarea.Hide                      ' no muestro video alguno, no se aun si hay camara web
    tiempotranscurrido_imagenes.Stop    ' detengo el vigilador de proceso de asistencia (verificacion/enrolado)
    horamostrar.Start                   ' interfaz preparada, arranca el horario de trabajo

    dbmanagdat = New DBmandat
    dbmanagdat.getConeccionDB()
    If Me.datos.itsDbLocalLista() == False Then
        estatus = dbmanagdat.syncronizar()  ' syncronizar crea todas las tablas necesarias, poblando todo, listado, enrolado y registros
        If estatus == -1 Then
            Quit                        ' si iniciando el listado no se encuentra ningun archivo, la aplicacion sale
        Endif
    Endif
    
    '' una app grafica es un hilo realmente, asi que en cada ciclo verifico el estado del modulo de captura
    Print " interfaz asistencia iniciada, vigilando modulo captura en estado " & Mcaptura.est_app_asis & ", usuario actual: " & datos.getUsuarioActual()

End


Public Sub algo()
    
  
    ' If Mcaptura.est_app_asis == 9       ' si el modulo de captura esta en estado 9 puedo arrrancar con los datos
    '     dbmanagdat.syncronizar()
    ' Endif
    ' If Mcaptura.est_app_asis == 1       ' si el modulo de captura esta en estado 1 invoco DB enrolado del id
    '     dbmanagdat.enrolar()
    ' Endif
    ' If Mcaptura.est_app_asis == 2       ' si el modulo de captura entr estado 2 invoco DB verificar el id contra el enrolado
    '     dbmanagdat.verificar()
    ' Endif
  
    
End


'' proceso que prepara el dispositivo de escanedo dactilar, establece un semaforo para saber cuando esta disponible
Public Sub iniciarEscaner()

    Mcaptura.funcionando_escaner()
    panelidverificar.Show

End

'' proceso que enciende la camara, segun la config y las propiedades establecidas
Public Sub iniciarCamara()

    Mcaptura.funcionando_camara()
    videoarea.Show

End

'' Esta funcion es importante, se dispara en "Mcaptura.scan_dedo_imagen()"
Public Sub tiempotranscurrido_imagenes_Timer()

    Print " vigilando "
    ' en lo que arranca nuestro temporizador, excondemos el boton
    btnscanear.Visible = False
    btnscanear.Hide
    inputficha.Hide
    'Mcaptura.est_app_asis = 0
    ' mandamos (en el ciclo del timer) esperar 4 segundos, y despues volvemos dejar tirar foto y huella
    If DateDiff(horaalescanear, Now, gb.Second) > 3 Then
        img_mostrar_scan.Hide  ' por supuesto, si ya se mostro huella, y se vuelve capturar, escondemos la anterior
        btnscanear.Visible = True
        btnscanear.Show
        inputficha.Show
        mensageusuario.Hide
        horamostrar.Start
        img_mostrar_scan.Hide
        Mcaptura.est_app_asis = 2
        tiempotranscurrido_imagenes.Stop
        FMain.iniciarEscaner
    Endif
    Print " estado " & Mcaptura.est_app_asis

End

'' al llamarse, marca un tiempo, se usa
'' para determinar cuanto tiempo ha pasado desde que se le llamo,
'' usela con el timer "tiempotranscurrido_foto"
Public Sub setHoraAlEscanear()

    horaalescanear = Now

End

'' muestra fecha y hora en el formulario principal, al iniciarse
Public Sub horamostrar_Timer()

    horalcd.Text = Format$(Now, "dd/mmmm/yyyy hh:nn:ss")
    horalcd.Refresh

End

Public Sub inputficha_GotFocus()

    inputficha.Text = ""

End

Public Sub Form_KeyPress()

    If Key.code = Key.Return Or Key.code = Key.Enter Then
        If inputficha.Text == mensageinput Or Trim(inputficha.Text) == "" Then
            inputficha.SetFocus
        Else
            btnscanear_Click
        Endif
    Endif

End

'' al activasrse, llama el evento de escaneo,
'' tomando desde la instancia de datos, el usuario,
'' y deteniendo la hora para que se muestre cuando se escaneo
Public Sub btnscanear_Click()

    inputficha.SetFocus
    If inputficha.Text == mensageinput Or Trim(inputficha.Text) == "" Then
        Message.Info(mensageinput)
        Return
    Else
        Me.datos.setUsuarioActual(inputficha.Text)
        horamostrar.Stop
        Mcaptura.est_app_asis = 1
        btnscanear.Hide
        btnscanear.Visible = False
        Mcaptura.scan_dedo_rostro(Me.datos.getUsuarioActual())
        Try Mcaptura.getCamera().Save(User.Home & "/." & datos.getUsuarioActual() & ".png")

    Endif

End

Public Sub pintarvideo_Timer()

    videoarea_Draw

End

Public Sub videoarea_Draw()

    Dim hPict As Picture

    hPict = Mcaptura.getCamera().Image.Picture
    'Try PictureBox1.Picture = hWebCam.Picture
    Draw.Begin(videoarea)
    Draw.Picture(hPict, (Me.videoarea.W - hPict.W) \ 2, (Me.videoarea.H - hPict.H) \ 2)
    Draw.End

    pintarvideo.Enabled = True

End

Public Sub btnverificar_Click()

End
