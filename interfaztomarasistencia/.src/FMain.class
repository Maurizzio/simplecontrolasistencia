' Gambas class file

Private horaalescanear As Date
Private mensageinput As String
Public datos As DData
Public fauth As FAuth
Public inputcodigo As String
Public inputid As String


Public Sub Form_Open()

    Dim clave As String
    Dim tiempodiario As Long
    Dim numeroubica As Long
    Me.center           ' centramos el aplicativo
    mensageinput = "Ingrese id"
    Me.datos = New DData
    Me.datos = Mset.prepararporconfiguracion()  ' leer la configuracion, que camara, que modo, que db, etc
    tiempodiario = Val(Format$(Now, "mmddhh"))
    numeroubica = Val(Me.datos.getUbicacionUsuario())
    Print "Sistema de Asistencia: Interfaz arrancada con tiempo dinamico en: " & tiempodiario & " " & numeroubica
    clave = numeroubica * tiempodiario
    Me.datos.setClaveAdminEnrolado(clave)    ' confogura la clave de administracion y enrolado
    Me.datos.setUsuarioActual("ninguno")
    Mcaptura.est_app_asis = 0   ' cada funcion abajo coloca est_app_asis en 0 si exitoso, sino 3,4,5 en fallo
    iniciarInterfaz     ' inicia y coloca orden en el grafico que ve el usuario, esconde mensages y pide id
    iniciarEscaner      ' inicia y verifica el backend, el escaner y ve si hay uno, sino emula uno, par pedir camara
    iniciarCamara       ' inicia y preprara la camara de video para empezar tomar fotos de los usuarios/trabajadores
    Print "clave: " & Me.datos.getClaveAdminEnrolado()

End

'' este proceso inicia y/o prepara la apariencia en el modo normal (sin hacer nada)
Public Sub iniciarInterfaz()

    Dim estatus As Integer
    Dim dbmanagdat As DBmandat
    img_video_mostrar.Visible = True
    ' inicializacion de variables y entorno de captura, asi como de muestra
    inputficha.Text = mensageinput      ' en el input, coloco que ingrese un id cedula o ficha
    mensageusuario.Hide                 ' no muestro ninguna notificacion al usuario, la app esta en espera de uno
    img_dedo_mostrar.Hide               ' escondo el area de imagen de dedo ya que la app esta en espera de uno
    img_cara_mostrar.Hide               ' escondo el area de foto del usuario ya que no hay usuario aun
    img_video_mostrar.Hide              ' no muestro video alguno, no se aun si hay camara web
    tiempotranscurrido_imagenes.Stop    ' detengo el vigilador de proceso de asistencia (verificacion/enrolado)
    horamostrar.Start                   ' interfaz preparada, arranca el horario de trabajo

    dbmanagdat = New DBmandat
    dbmanagdat.getConeccionDB()
    
    If dbmanagdat.isConected() == True Then
        Me.datos.setDbLocalLista(True)
        estatus = dbmanagdat.syncronizar(Me.datos.itsListaCompresa(), Me.datos.getArchivoConsolidado())  ' syncronizar crea todas las tablas necesarias, poblando todo, listado, enrolado y registros
        If estatus == -1 Then
            dbmanagdat.closeConnection
            Quit                        ' si iniciando el listado no se encuentra ningun archivo, la aplicacion sale
        Endif
    Endif
    
    '' una app grafica es un hilo realmente, asi que en cada ciclo verifico el estado del modulo de captura
    Print "La interfaz asistencia iniciada, vigilando modulo captura en estado " & Mcaptura.est_app_asis & ", usuario actual: " & datos.getUsuarioActual()

End

'' proceso que prepara el dispositivo de escanedo dactilar, establece un semaforo para saber cuando esta disponible
Public Sub iniciarEscaner()
    Mcaptura.funcionando_escaner()
    panelidverificar.Show
End

'' proceso que enciende la camara, segun la config y las propiedades establecidas
Public Sub iniciarCamara()
    Mcaptura.funcionando_camara()
    img_video_mostrar.Show
End

'' Esta funcion es importante, se dispara en "Mcaptura.scan_dedo_imagen()"
Public Sub tiempotranscurrido_imagenes_Timer()
    Print "Proceso de escaneo iniciado, vigilando... "
    ' en lo que arranca nuestro temporizador, excondemos el boton
    btnscanear.Visible = False
    btnscanear.Hide
    inputficha.Hide
    If DateDiff(horaalescanear, Now, gb.Second) > 5 Then
        btnscanear.Visible = True
        btnscanear.Show
        inputficha.Show
        mensageusuario.Hide
        horamostrar.Start
        img_cara_mostrar.Refresh    ' redibujado es diferido y se llama en el proximo evento, perfecto para este problema
        img_dedo_mostrar.Refresh    ' redibujado es diferido y se llama en el proximo evento, perfecto para este problema
        img_dedo_mostrar.Hide
        img_cara_mostrar.Hide
        img_video_mostrar.Show
        img_video_mostrar.Visible = True
        tiempotranscurrido_imagenes.Stop
        Print "Proceso de escaneo/verificacion finalizado."
        ' FMain.iniciarEscaner
        ' FMain.iniciarCamara
        If Not IsNull(img_cara_mostrar.Picture) Then
            img_cara_mostrar.Picture.Flush
            img_cara_mostrar.Picture.Clear
        Endif
        panelidverificar.Show
        inputficha.Text = ""
    Endif
    Print "... estado " & Mcaptura.est_app_asis
End

'' al llamarse, marca un tiempo, se usa
'' para determinar cuanto tiempo ha pasado desde que se le llamo,
'' usela con el timer "tiempotranscurrido_foto"
Public Sub setHoraAlEscanear()
    horaalescanear = Now
End

'' muestra fecha y hora en el formulario principal, al iniciarse
Public Sub horamostrar_Timer()
    horalcd.Text = Format$(Now, "dd/mmmm/yyyy hh:nn:ss")
    horalcd.Refresh
End

Public Sub inputficha_GotFocus()
    inputficha.Text = ""
End

'' al activasrse, llama el evento de escaneo,
'' tomando desde la instancia de datos, el usuario,
'' y deteniendo la hora para que se muestre cuando se escaneo
Public Sub btnscanear_Click()
    
    fauth = New FAuth
    
    ' inputficha.SetFocus
    If inputficha.Text == mensageinput Or Trim(inputficha.Text) == "" Then
        Message.Info(mensageinput)
        Return
    Else
        If fauth.ShowModal() Or Not inputcodigo Or Not inputid Then 
            Return
        Else
            If inputcodigo == datos.getClaveAdminEnrolado() Then
                Me.datos.setUsuarioActual(inputficha.Text)
                horamostrar.Stop
                Mcaptura.est_app_asis = 1
                btnscanear.Hide
                btnscanear.Visible = False
                Mcaptura.scan_dedo_rostro(Me.datos.getUsuarioActual())
            Else
                Message.Error("Clave diaria incorrecta, favor comuniquese con sistemas.")
            Endif
        Endif
    Endif
End

Public Sub pintarvideo_Timer()
    img_video_mostrar_Draw
End

Public Sub img_video_mostrar_Draw()

    Dim hPict As Picture

    hPict = Mcaptura.getCamera().Image.Picture
    'Try PictureBox1.Picture = hWebCam.Picture
    Draw.Begin(img_video_mostrar)
    Draw.Picture(hPict, (Me.img_video_mostrar.W - hPict.W) \ 2, (Me.img_video_mostrar.H - hPict.H) \ 2)
    Draw.End

    pintarvideo.Enabled = True

End

Public Sub btnverificar_Click()
    inputficha.SetFocus
    If inputficha.Text == mensageinput Or Trim(inputficha.Text) == "" Then
        Message.Info(mensageinput)
        Return
    Else
        Me.datos.setUsuarioActual(inputficha.Text)
        horamostrar.Stop
        Mcaptura.est_app_asis = 1
        btnscanear.Hide
        btnscanear.Visible = False
        Mcaptura.verif_dedo_rostro(Me.datos.getUsuarioActual(), 1)
    Endif
End
