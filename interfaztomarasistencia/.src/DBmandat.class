' Gambas class file

' Gambas module file

Private hconn As Connection
Private hconnpath As String
Private hconndbnam As String
Private hconniscon As Boolean


'' modulo de apertura y conexcion a la db para guardar las imagenes escaneadas
Public Sub getConeccionDB() As Connection

    'hconnpath = Application.Path & "/dbdata/asistenciatomar.sqlite"
    hconndbnam = ".scanerguidb.db"
    hconniscon = False

    hconn = New Connection 'Instanciamos conexion
    With hconn
        .Type = "sqlite3"
        .Host = User.Home   ' usando el home de quien corre la app para buscar alli la DB
        .Name = hconndbnam          ' no decimos aun el nombre/archivo de la db, la creamos si no existe
    End With

    Try hconn.Open
    If Error Then

        Print "Error: " & Error.Code & " " & Error.Text & " db was " & hconn.Host & " trying to create"

        hconn.Close
        hconn.Name = ""          ' no decimos aun el nombre/archivo de la db, la creamos si no existe
        hconn.Open

        If Not hconn.Databases.Exist(hconndbnam) Then  'Si no existe la B.D. la creamos
            hconn.Databases.Add(hconndbnam)
            Wait 1              'elproceso de creacion tarda (operacion I/O) asi que esperamos ocurra
            hconn.Close
            hconn.Name = hconndbnam
        Endif

        Try hconn.Open
        If Error Then
            Print "Error, no pudo crearse la DB en " & hconn.Name & " no mas acciones para solucionar"
            hconn = Null
            hconn.Close
            hconniscon = False
        Endif
    Else
        Print "Conexcion realizada, usando la DB " & hconn.Name & " existente"
        hconniscon = True
    Endif

Return hconn

End


'' procedimiento que inicializa la tabla de datos de listado de personal y sus huellas, en caso de no existir
Public Function sysasis_listado_huella()

    ' Create TABLE sysasis_listado_huella(
    '   cod_ficha VARCHAR(20) Not Null, - - ficha / cedula / id del trabajador NOTA ESTE NO ES CI SINO numero, en VNZ es CI
    '   fec_registro Date Not Null, - - fecha del registro de dia de su huella dactilar
    '   cod_ubicacion VARCHAR(20) Not Null, - - ubicacion(tienda)de su ultima actividad
    '   hex_huelladactilar BLOB Not Null, - - huella dactilar tomada
    '   fec_actualizacion Date Null, - - fecha en que se altero los datos de esta tabla por ultima vez
    '   cod_usuasys VARCHAR(20)Null, - - codigo / usuario que altero los datos por ultima vez
    '   PRIMARY KEY(cod_ficha, fec_registro, cod_ubicacion, hex_huelladactilar),

    ' Tabla de la ficha de registro de sysasis_enrolamiento_huella

    Dim hTable As Table

    If isConected() == False Then
        getConeccionDB()
    Endif
    
    If hconniscon Then
    If Not hconn.Tables.Exist("sysasis_listado_huella") Then
        hTable = hconn.Tables.Add("sysasis_listado_huella")
        With hTable.Fields
            .Add("cod_ficha", db.String, 20)   ' ficha / cedula / id del trabajador NOTA ESTE NO ES CI, en VNZ es CI
            .Add("fec_registro", db.Date,, Now)   ' fecha del registro de dia de su huella dactilar
            .Add("cod_ubicacion", db.String, 20)   ' ubicacion(tienda)de su ultima actividad
            .Add("hex_huelladactilar", db.Blob,, Null)  ' huella dactilar del usuario/trabajado ficha
            .Add("fec_actualizacion", db.Date,, Now)   ' fecha del registro de dia de su huella dactilar
            .Add("cod_usuasys", db.String, 20)   ' ficha / cedula / id del trabajador NOTA ESTE NO ES CI, en VNZ es CI
        End With
        hTable.PrimaryKey = ["cod_ficha", "cod_ubicacion"]
        hTable.Update
    Endif
    Else
    Message.Error("")
    Endif

End


'' proceso de inicializacion de DB, tabla de enrolamiento, si no existe en la DB una tabla de enrolamiento, se crea
Public Function sysasis_enrolamiento_huella()

    ' Create TABLE sysasis_enrolamiento_huella(
    '   cod_ficha VARCHAR(20) Not Null, - - ficha / cedula / id del trabajador NOTA ESTE NO ES CI, en VNZ es CI
    '   fec_registro Date Not Null, - - fecha del registro de dia de su huella dactilar
    '   cod_ubicacion VARCHAR(20) Not Null, - - ubicacion(tienda)de su ultima actividad
    '   hex_huelladactilar BLOB Not Null, - - huella dactilar tomada
    '   fec_actualizacion Date Null, - - fecha en que se altero los datos de esta tabla por ultima vez
    '   cod_usuasys VARCHAR(20)Null, - - codigo / usuario que altero los datos por ultima vez
    '   PRIMARY KEY(cod_ficha, fec_registro, cod_ubicacion, hex_huelladactilar),

    ' Tabla de la ficha de registro de sysasis_enrolamiento_huella

    Dim hTable As Table

    If isConected() == False Then
        getConeccionDB()
    Endif
    
    If Not hconn.Tables.Exist("sysasis_enrolamiento_huella") Then
        hTable = hconn.Tables.Add("sysasis_enrolamiento_huella")
        With hTable.Fields
            .Add("cod_ficha", db.String, 20)   ' ficha / cedula / id del trabajador NOTA ESTE NO ES CI, en VNZ es CI
            .Add("fec_registro", db.Date,, Now)   ' fecha del registro de dia de su huella dactilar
            .Add("cod_ubicacion", db.String, 20)   ' ubicacion(tienda)de su ultima actividad
            .Add("hex_huelladactilar", db.Blob,, Null)  ' huella dactilar del usuario/trabajado ficha
            .Add("fec_actualizacion", db.Date,, Now)   ' fecha del registro de dia de su huella dactilar
            .Add("cod_usuasys", db.String, 20)   ' ficha / cedula / id del trabajador NOTA ESTE NO ES CI, en VNZ es CI
        End With
        hTable.PrimaryKey = ["cod_ficha", "cod_ubicacion"]
        hTable.Update
    Endif

End


'' inicializacion de registros en la DB, si no existe en DB la tabla de registros la crea
Public Function sysasis_registro()

    ' - - tabla de registros del horario de trabajo, es usada para enviar a OP y registrar los horarios laborados
    ' Create TABLE sysasis_registro(
    '   cod_ficha VARCHAR(20) Not Null, - - ficha / cedula / id del trabajador NOTA ESTE NO ES CI, en VNZ es CI
    '   cod_cedula VARCHAR(20) Not Null, - - cedula con nacionalidad y guin del trabajador, solo VNZ
    '   fec_registro Date Not Null, - - fecha del registro de dia a laborar
    '   cod_ubicacion VARCHAR(20) Not Null, - - ubicacion(tienda)de su ultima actividad
    '   num_contador INTEGER Not Null Default 0, - - contador de fotos, si va a distintos lugares debe marcar salida
    '   horaentrada INTEGER Null, - - hora de entrada del dia
    '   minuentrada INTEGER Null, - - minuto de entrada en dicha hora
    '   horadescanso INTEGER Null, - - hora de descanso del dia
    '   minudescanso INTEGER Null, - - minuto de descanso en dicha respectiva hora
    '   horareincor INTEGER Null, - - hora que se reincorpora del descanso
    '   minureincor INTEGER Null, - - minuto de reincorporacion de dicha hora
    '   horasalida INTEGER Null, - - hora de salida del dia laborado
    '   minusalida INTEGER Null, - - minuto de salida de dich hora
    '   fec_actualizacion Date Null, - - fecha en que se altero los datos de esta tabla por ultima vez NOTA FUNCIONA CON DEFAULT NOW
    '   cod_usuasys VARCHAR(20)Null, - - codigo / usuario que altero los datos por ultima vez
    '   PRIMARY KEY(cod_ficha, fec_registro, cod_ubicacion),
    '   - - si el personal es muy movido, tendra registros en distintas ubicaciones,
    '   - - el ubicacion ayuda a descartar duplicados.esto amerita tener un SP que maneje los datos
    '   - - la expotacio se realizara en un vista que colocara el calculo de las horas y
    '   - - estos registros "dispersos"(ejemplo, entro en castellana, su primera salida debe ser de castellana antes de ir a otro lado)
    '   - - diferencia entre registro no puede ser menor a 1 / 3 hora y mayor a 6 horas CUANDO SEAN SELLOS DISTINTOS

    ' Poruqe dos columnas de fecha? : porque la segunda es por defecto la fecha y hora actual, si alguien manipula, se registra
    ' lo que significa que si alguien inserta alguna hora de trabajo a mano, se vera la trampa si no ejecuta completo el query

    Dim hTable As Table

    If isConected() == False Then
        getConeccionDB()
    Endif
    
    If Not hconn.Tables.Exist("sysasis_registro_huella") Then
        hTable = hconn.Tables.Add("sysasis_registro_huella")
        With hTable.Fields
            .Add("cod_ficha", db.String, 20)   ' ficha / cedula / id del trabajador NOTA ESTE NO ES CI, en VNZ es CI
            .Add("fec_registro", db.Date,, Null)   ' fecha del registro de dia de su huella dactilar
            .Add("cod_ubicacion", db.String, 20)   ' ubicacion(tienda)de su ultima actividad
            .Add("num_contador", db.Integer,, 0)      ' contador de fotos, si va a distintos lugares debe marcar salida = 4
            .Add("horaentrada", db.Integer,, 0)      '
            .Add("minuentrada", db.Integer,, 0)      '
            .Add("horadescanso", db.Integer,, 0)      '
            .Add("minudescanso", db.Integer,, 0)      '
            .Add("minureincor", db.Integer,, 0)      '
            .Add("horasalida", db.Integer,, 0)      '
            .Add("minusalida", db.Integer,, 0)      '
            .Add("hex_huelladactilar", db.Blob,, Null)  ' huella dactilar del usuario/trabajado ficha
            .Add("fec_actualizacion", db.Date,, Now)   ' fecha del registro de dia de su huella dactilar
            .Add("cod_usuasys", db.String, 20)   ' ficha / cedula / id del trabajador NOTA ESTE NO ES CI, en VNZ es CI
        End With
        hTable.PrimaryKey = ["cod_ficha", "cod_ubicacion", "fec_registro"]
        hTable.Update
    Endif

End


'' este proceso, inicia la tabla de lista de trabajadores/usuarios, y la pobla desde un archivo CSV o desde un regiastro por defecto
Public Sub syncronizar() As Integer

    Dim hFile As File
    Dim wtable As Result    '
    Dim wline As String     ' linea en procesamiento del CSV
    Dim wdata As String[]   ' linea procesada del CSV
    Dim hTable As Table     ' tabla de la nomina listado desde esas lineas de procesamiento


    If isConected() == False Then
        Print "ver " & isConected()
        getConeccionDB()
    Endif
    
    If Not hconn.Tables.Exist("ConsolidadoTemp") Then
        hTable = hconn.Tables.Add("ConsolidadoTemp")
        With hTable.Fields
            .Add("CODSUC", db.String, 60, "999") ' CODSUC VARCHAR(60) Default Null, - - brinda info del lugar de trabajo
            .Add("CODGER", db.String, 60, "999") ' CODGER VARCHAR(60) Default Null, - - brinda info del lugar donde debe trabajar
            .Add("CODDEP", db.String, 60, Null) ' CODDEP VARCHAR(60) Default Null, - - codigo interno para verificacion y auditoria
            .Add("FICHA", db.String, 60, "99999999") ' FICHA VARCHAR(10)Null Default Null, - - identificador o licencia conducir, cedula sin letra de nacionalidad en caso Venezuela
            .Add("NOMBRES", db.String, 60, Null) ' NOMBRES VARCHAR(60)Null Default Null, - - nombre, ambos separados por un espacio
            .Add("APELLIDOS", db.String, 60, Null) ' APELLIDOS VARCHAR(60)Null Default Null, - - apellido, ambos separados por un espacio
            .Add("NOMBREEGEO1", db.String, 60, Null) ' NOMBREEGEO1 VARCHAR(60)Null Default Null, - - codigo interno para reportes y auditoria de emergencia
            .Add("ESTADO", db.String, 60, Null) ' ESTADO VARCHAR(60)Null Default Null, - - activo, inactivo, suspendido, vacaciones, usado para verificacion y auditoria
            .Add("CODCARGO", db.String, 60, Null) ' CODCARGO VARCHAR(10)Null Default Null, - - codigo de el cargo o puesto que desempeña
            .Add("Modalidad", db.String, 60, Null) ' Modalidad VARCHAR(60)Null Default Null, - - casa, base, periodo prueba, temporal, interno para determinar horario extendido
            .Add("FSVacac", db.String, 60, Null) ' FSVacac VARCHAR(60)Null Default Null, - - fecha inicio de vacaciones, necesario para verificaciones
            .Add("FRVacac", db.String, 60, Null) ' FRVacac VARCHAR(60)Null Default Null, - - fecha fin de vacaciones, necesario para ver si el tipo falto al reincorporarse
            .Add("FSSuspen", db.String, 60, Null) ' FSSuspen VARCHAR(60)Null Default Null, - - fecha inicio de suspendido, necesario para verificaciones
            .Add("FRSuspen", db.String, 60, Null) ' FRSuspen VARCHAR(60)Null Default Null, - - fecha fin de suspension, necesario para ver si el tipo falto
            .Add("Turno", db.String, 60, Null) ' Turno VARCHAR(60)Null Default Null, - - manana tarde noche, fin semana... necesario apra que no salga antes de time
            .Add("Cedula", db.String, 60, Null) ' Cedula VARCHAR(12)Null Default Null, - - cedula con el simbolo de nacionalidad separado por guion, solo Venezuela
            .Add("ApeNomC", db.String, 60, Null) ' ApeNomC VARCHAR(60)Null Default Null, - - apellido y nombre, primero de cada uno separado por espacio
            .Add("fec_actualizacion", db.String, 60, Now) ' fec_actualizacion Date Not Null, - - fecha en que se altero los datos de esta tabla por ultima vez
            .Add("cod_usuario", db.String, 60, "systemas") ' cod_usuario VARCHAR(20)Null Default 'systemas' , -- codigo/usuario que altero los datos por ultima vez
        End With
        hTable.PrimaryKey = ["FICHA", "CODGER"]
        hTable.Update
    Endif


    If Not Exist(User.Home & FMain.datos.getArchivoConsolidado()) Then
        Message.Warning("No se encontro el archivo de datos de sincronizacion")
    Else
        ' procesamiento del archivo CSV, en un futuro este deberia solo enviar los cambiios
        hFile = Open User.Home & FMain.datos.getArchivoConsolidado() For Read
        While Not Eof(hFile)
           Line Input #hFile, wline
           wdata = Split(wline, ",")
           ' TODO: solo cargar los registeros nuevos , si alguno existe debo realizar update
           wtable = hconn.Create("ConsolidadoTemp")
           wtable["CODSUC"] = wdata[0] ' CODSUC VARCHAR(60) Default Null, - - brinda info del lugar de trabajo
           wtable["CODGER"] = wdata[1] ' CODGER VARCHAR(60) Default Null, - - brinda info del lugar donde debe trabajar
           wtable["CODDEP"] = wdata[2] ' CODDEP VARCHAR(60) Default Null, - - codigo interno para verificacion y auditoria
           wtable["FICHA"] = wdata[3] ' FICHA VARCHAR(10)Null Default Null, - - identificador o licencia conducir, cedula sin letra de nacionalidad en caso Venezuela
           wtable["NOMBRES"] = wdata[4] ' NOMBRES VARCHAR(60)Null Default Null, - - nombre, ambos separados por un espacio
           wtable["APELLIDOS"] = wdata[5] ' APELLIDOS VARCHAR(60)Null Default Null, - - apellido, ambos separados por un espacio
           wtable["NOMBREEGEO1"] = wdata[6] ' NOMBREEGEO1 VARCHAR(60)Null Default Null, - - codigo interno para reportes y auditoria de emergencia
           wtable["ESTADO"] = wdata[7] ' ESTADO VARCHAR(60)Null Default Null, - - activo, inactivo, suspendido, vacaciones, usado para verificacion y auditoria
           wtable["Modalidad"] = wdata[8] ' CODCARGO VARCHAR(10)Null Default Null, - - codigo de el cargo o puesto que desempeña
           wtable["FSVacac"] = wdata[9] ' Modalidad VARCHAR(60)Null Default Null, - - casa, base, periodo prueba, temporal, interno para determinar horario extendido
           wtable["FRVacac"] = wdata[10] ' FSVacac VARCHAR(60)Null Default Null, - - fecha inicio de vacaciones, necesario para verificaciones
           wtable["FSSuspen"] = wdata[11] ' FRVacac VARCHAR(60)Null Default Null, - - fecha fin de vacaciones, necesario para ver si el tipo falto al reincorporarse
           wtable["FRSuspen"] = wdata[12] ' FSSuspen VARCHAR(60)Null Default Null, - - fecha inicio de suspendido, necesario para verificaciones
           wtable["Turno"] = wdata[13] ' Turno VARCHAR(60)Null Default Null, - - manana tarde noche, fin semana... necesario apra que no salga antes de time
           wtable["Cedula"] = wdata[14] ' Cedula VARCHAR(12)Null Default Null, - - cedula con el simbolo de nacionalidad separado popr guion, solo Venezuela
           wtable["ApeNomC"] = wdata[15] ' ApeNomC VARCHAR(60)Null Default Null, - - apellido y nombre, primero de cada uno separado por espacio
           wtable.Update
        Wend
        hFile.Close
    Endif
    
End

'' empleada para verificar el correcto seguimiento de inicio de la gestin de datos, con true, cada proceso extra no fallaria
Public Sub isConected() As Integer

    Return hconniscon ' getconection establece esto a true si hay una coneccion activa

End
